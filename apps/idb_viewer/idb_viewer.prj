! UIMX ascii 2.5 key: 2358                                                      

*idb_viewer.class: Project
*idb_viewer.PjName: idb_viewer
*idb_viewer.PjDoMain: 1
*idb_viewer.PjDoMake: 0
*idb_viewer.PjWriteAll: 1
*idb_viewer.PjRunMake: 0
*idb_viewer.PjWriteCDir: .
*idb_viewer.PjMode: 1

*applicationShell1_PJinterface.class: PJinterface
*applicationShell1_PJinterface.PjName: applicationShell1_PJinterface
*applicationShell1_PJinterface.PjSwName: applicationShell1
*applicationShell1_PJinterface.PjParent: idb_viewer
*applicationShell1_PJinterface.PjFileName: applicationShell1.i
*applicationShell1_PJinterface.PjShowFlag: 0
*applicationShell1_PJinterface.PjGuiDate: 819386067
*applicationShell1_PJinterface.PjDate: 819386458
*applicationShell1_PJinterface.PjMode: 1
*applicationShell1_PJinterface.PjCFileName: applicationShell1.c

*uxmain.class: PJuxmain
*uxmain.PjName: uxmain
*uxmain.PjParent: idb_viewer
*uxmain.PjFileName: idb_viewer.c
*uxmain.PjDate: 0
*uxmain.PjMode: -1

*xtmain.class: PJxtmain
*xtmain.PjName: xtmain
*xtmain.PjParent: idb_viewer
*xtmain.PjFileName: idb_viewer.c
*xtmain.PjDate: 819386458
*xtmain.PjMode: 1
*xtmain.PjBody: /*\
          Copyright (C) 1993, 1994, RSNA and Washington University\
 \
          The software and supporting documentation for the Radiological\
          Society of North America (RSNA) 1993, 1994 Digital Imaging and\
          Communications in Medicine (DICOM) Demonstration were developed\
          at the\
                  Electronic Radiology Laboratory\
                  Mallinckrodt Institute of Radiology\
                  Washington University School of Medicine\
                  510 S. Kingshighway Blvd.\
                  St. Louis, MO 63110\
          as part of the 1993, 1994 DICOM Central Test Node project for, and\
          under contract with, the Radiological Society of North America.\
 \
          THIS SOFTWARE IS MADE AVAILABLE, AS IS, AND NEITHER RSNA NOR\
          WASHINGTON UNIVERSITY MAKE ANY WARRANTY ABOUT THE SOFTWARE, ITS\
          PERFORMANCE, ITS MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR\
          USE, FREEDOM FROM ANY COMPUTER DISEASES OR ITS CONFORMITY TO ANY\
          SPECIFICATION. THE ENTIRE RISK AS TO QUALITY AND PERFORMANCE OF\
          THE SOFTWARE IS WITH THE USER.\
 \
          Copyright of the software and supporting documentation is\
          jointly owned by RSNA and Washington University, and free access\
          is hereby granted as a license to use this software, copy this\
          software and prepare derivative works based upon this software.\
          However, any distribution of this software source code or\
          supporting documentation or derivative works (source code and\
          supporting documentation) must include the three paragraphs of\
          the copyright notice.\
*/\
/* Copyright marker.  Copyright will be inserted above.  Do not remove */\
\
/*\
**                   Electronic Radiology Laboratory\
**                 Mallinckrodt Institute of Radiology\
**              Washington University School of Medicine\
**\
** Module Name(s):	main\
** Author, Date:	Steve Moore, Summer 1994\
** Intent:		This program is used to provide a crude\
**			navigation tool through\
** Last Update:         $Author: smm $, $Date: 1998-08-03 16:15:25 $\
** Source File:         $RCSfile: idb_viewer.prj,v $\
** Revision:            $Revision: 1.6 $\
** Status:              $State: Exp $\
*/\
 \
static char rcsid[] = "$Revision: 1.6 $ $RCSfile: idb_viewer.prj,v $";\
\
/*-----------------------------------------------------------\
 * This is the project main program file for Xt generated \
 * code. You may add application dependent source code \
 * at the appropriate places. \
 * 			     \
 * Do not modify the statements preceded by the dollar\
 * sign ($), these statements will be replaced with\
 * the appropriate source code when the main program is  \
 * generated.  \
 *\
 * $Date: 1998-08-03 16:15:25 $  		$Revision: 1.6 $ \
 *-----------------------------------------------------------*/ \
\
#include <X11/Intrinsic.h>\
#include <X11/StringDefs.h>\
#include <X11/Xlib.h>\
\
#include <Xm/Xm.h>\
\
#include <stdio.h>\
#include <stdlib.h>\
\
#include "dicom.h"\
#include "ctnthread.h"\
#include "condition.h"\
#include "lst.h"\
#include "dicom_objects.h"\
#include "tbl.h"\
#include "idb.h"\
\
/*---------------------------------------------------- \
 * UxXt.h needs to be included only when compiling a \
 * stand-alone application. \
 *---------------------------------------------------*/\
#ifndef DESIGN_TIME\
#include "UxXt.h"\
#endif /* DESIGN_TIME */\
\
XtAppContext	UxAppContext;\
Widget		UxTopLevel;\
Display		*UxDisplay;\
int		UxScreen;\
\
/*----------------------------------------------\
 * Insert application global declarations here\
 *---------------------------------------------*/\
IDB_HANDLE *IDBHandle;\
static void usageerror();\
extern void loadPatient(void);\
\
#ifdef _NO_PROTO\
main(argc,argv)\
        int     argc;\
        char    *argv[];\
#else\
main( int argc, char *argv[])\
#endif /* _NO_PROTO */\
{\
  CONDITION cond;\
  CTNBOOLEAN verboseTBL = FALSE;\
\
	/*-----------------------------------------------------------\
	 * Declarations.\
         * The default identifier - mainIface will only be declared \
	 * if the interface function is global and of type swidget.\
	 * To change the identifier to a different name, modify the\
	 * string mainIface in the file "xtmain.dat". If "mainIface"\
         * is declared, it will be used below where the return value\
	 * of  PJ_INTERFACE_FUNCTION_CALL will be assigned to it.\
         *----------------------------------------------------------*/ \
\
  	$PJ_INTERFACE_RETVAL_TYPE\
\
	/*---------------------------------\
	 * Interface function declaration\
	 *--------------------------------*/	\
\
 	$PJ_INTERFACE_FUNCTION_DECL\
	$PJ_INTERFACE_FUNCTION_ARG_DECL\
\
	/*---------------------\
	 * Initialize program\
	 *--------------------*/\
\
#ifdef XOPEN_CATALOG\
	if (XSupportsLocale()) {\
		XtSetLanguageProc(NULL,(XtLanguageProc)NULL,NULL);\
	}\
#endif\
\
	SgePreInitialize(&argc, argv);\
  	UxTopLevel = XtAppInitialize(&UxAppContext, "$PJ_APP_CLASS_NAME",\
				     NULL, 0, &argc, argv, NULL, NULL, 0);\
\
	UxDisplay = XtDisplay(UxTopLevel);\
	UxScreen = XDefaultScreen(UxDisplay);\
\
	/* We set the geometry of UxTopLevel so that dialogShells\
	   that are parented on it will get centered on the screen\
	   (if defaultPosition is true). */\
\
	XtVaSetValues(UxTopLevel,\
			XtNx, 0,\
			XtNy, 0,\
			XtNwidth, DisplayWidth(UxDisplay, UxScreen),\
			XtNheight, DisplayHeight(UxDisplay, UxScreen),\
			NULL);\
\
	/*-------------------------------------------------------\
	 * Insert initialization code for your application here \
	 *------------------------------------------------------*/\
\
	while (--argc > 0 && *(++argv)[0] == '-') {\
	    switch ((*argv)[1]) {\
	    case 'v':\
		verboseTBL = TRUE;\
		break;\
	    case 'x':\
		if (--argc < 1)\
		    usageerror();\
		argv++;\
		if (strcmp(*argv, "TBL") == 0)\
		    verboseTBL = TRUE;\
		else\
		    usageerror();\
		break;\
	    default:\
		fprintf(stderr, "Unrecognized option: %s\n", *argv);\
		usageerror();\
		break;\
	    }\
	}\
\
	if (argc < 1)\
	    usageerror();\
\
	THR_Init();\
	(void) TBL_Debug(verboseTBL);\
\
	cond = IDB_Open(*argv, &IDBHandle);\
	if (cond != IDB_NORMAL) {\
	    COND_DumpConditions();\
	    THR_Shutdown();\
	    exit(1);\
	}\
\
\
	/*----------------------------------------------------------------\
	 * Create and popup the first window of the interface.  The 	 \
	 * return value can be used in the popdown or destroy functions.\
         * The Widget return value of  PJ_INTERFACE_FUNCTION_CALL will \
         * be assigned to "mainIface" from  PJ_INTERFACE_RETVAL_TYPE. \
	 *---------------------------------------------------------------*/\
\
	$PJ_INTERFACE_FUNCTION_CALL\
	$PJ_POPUP_CALL\
\
	loadPatient();\
\
	/*-----------------------\
	 * Enter the event loop \
	 *----------------------*/\
\
  	$PJ_EVENT_LOOP\
	THR_Shutdown();\
	return 0;\
}\
\
static void usageerror()\
{\
  char msg[] = "\\
Usage: [-v] [-x <fac>] database\n\\
\n\\
    -v  Place TBL facility in verbose mode\n\\
    -x  Place <fac> in verbose mode (TBL)\n\\
\n\\
    database is the name of the image database to be viewed\n";\
\
    fprintf(stderr, msg);\
    exit(1);\
}\

*xtmain.PjExplicitEventLoop: {\
\
	XEvent event;\
\
	for (;;)\
	{\
	    XtAppNextEvent(UxAppContext, &event);\
\
	    switch (event.type)\
	    {\
\
	       /*---------------------------------------------------\
	 	* Insert code here to handle any events that you do\
		* not wish to be handled by the interface.\
		*---------------------------------------------------*/\
\
		default:\
	    	    XtDispatchEvent(&event);\
	    	    break;\
	    }\
	}\
}
*xtmain.PjEdited: 1
*xtmain.PjHasImplicitLoop: 1
*xtmain.PjHasExplicitLoop: 0

*uilmain.class: PJuilmain
*uilmain.PjName: uilmain
*uilmain.PjParent: idb_viewer
*uilmain.PjFileName: idb_viewer.c
*uilmain.PjDate: 0
*uilmain.PjMode: -1

*uxmake.class: PJuxmake
*uxmake.PjName: uxmake
*uxmake.PjParent: idb_viewer
*uxmake.PjFileName: idb_viewer.mk
*uxmake.PjDate: 0
*uxmake.PjMode: -1

*xtmake.class: PJxtmake
*xtmake.PjName: xtmake
*xtmake.PjParent: idb_viewer
*xtmake.PjFileName: idb_viewer.mk
*xtmake.PjDate: 0
*xtmake.PjMode: -1

*uilmake.class: PJuilmake
*uilmake.PjName: uilmake
*uilmake.PjParent: idb_viewer
*uilmake.PjFileName: idb_viewer.mk
*uilmake.PjDate: 0
*uilmake.PjMode: -1
