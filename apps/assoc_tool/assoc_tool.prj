! UIMX ascii 2.5 key: 6614                                                      

*assoc_tool.class: Project
*assoc_tool.PjName: assoc_tool
*assoc_tool.PjDoMain: 1
*assoc_tool.PjDoMake: 1
*assoc_tool.PjWriteAll: 1
*assoc_tool.PjRunMake: 0
*assoc_tool.PjWriteCDir: .
*assoc_tool.PjMode: 1

*topLevelShell1_PJinterface.class: PJinterface
*topLevelShell1_PJinterface.PjName: topLevelShell1_PJinterface
*topLevelShell1_PJinterface.PjSwName: topLevelShell1
*topLevelShell1_PJinterface.PjParent: assoc_tool
*topLevelShell1_PJinterface.PjFileName: topLevelShell1.i
*topLevelShell1_PJinterface.PjShowFlag: 0
*topLevelShell1_PJinterface.PjGuiDate: 818695880
*topLevelShell1_PJinterface.PjDate: 818695876
*topLevelShell1_PJinterface.PjMode: 1
*topLevelShell1_PJinterface.PjCFileName: topLevelShell1.c

*uxmain.class: PJuxmain
*uxmain.PjName: uxmain
*uxmain.PjParent: assoc_tool
*uxmain.PjFileName: assoc_tool.c
*uxmain.PjDate: 0
*uxmain.PjMode: -1
*uxmain.PjBody: /*------------------------------------------------------------\
 * This is the project main program file for Ux generated  \
 * code. You may add application dependent source code\
 * at the appropriate places. \
 * 			     \
 * Do not modify the statements preceded by the dollar\
 * sign ($), these statements will be replaced with\
 * the appropriate source code when the main program is\
 * automatically generated. \
 *			\
 * $Date: 1998-08-03 16:07:37 $  		$Revision: 1.6 $ \
 *-----------------------------------------------------------*/\
\
#include <UxLib.h>\
#include <X11/Xlib.h>\
\
\
/*----------------------------------------------\
 * Insert application global declarations here\
 *---------------------------------------------*/\
#include "dicom.h"\
#include "ctnthread.h"\
\
\
#ifdef _NO_PROTO\
main(argc,argv)\
	int 	argc;\
	char 	*argv[];\
#else\
main( int argc, char *argv[])\
#endif /* _NO_PROTO */\
{\
	/*-----------------------------------------------------------\
	 * Declarations.\
	 * The default identifier - mainIface will only be declared  \
	 * if the interface function is global and of type swidget. \
	 * To change the identifier to a different name, modify the\
	 * string mainIface in the file "main.dat".  If "mainIface"\
	 * is declared, it will be used below where the return value \
	 * of  PJ_INTERFACE_FUNCTION_CALL will be assigned to it.\
         *-----------------------------------------------------------*/ \
\
  	$PJ_INTERFACE_RETVAL_TYPE\
\
	/*--------------------------------\
	 * Interface function declaration\
	 *-------------------------------*/	\
\
 	$PJ_INTERFACE_FUNCTION_DECL\
	$PJ_INTERFACE_FUNCTION_ARG_DECL\
\
	/*---------------------\
	 * Initialize Program\
	 *--------------------*/\
\
#ifdef XOPEN_CATALOG\
	if (XSupportsLocale()) {\
		XtSetLanguageProc(NULL,(XtLanguageProc)NULL,NULL);\
	}\
#endif\
\
	SgePreInitialize(&argc, argv);\
	UxInitCat();\
  	UxTopLevel = XtAppInitialize(&UxAppContext, "$PJ_APP_CLASS_NAME",\
				     NULL, 0, &argc, argv, NULL, NULL, 0);\
  	UxAppInitialize("$PJ_APP_CLASS_NAME", &argc, argv);\
\
	/*------------------------------------------------------\
	 * Insert initialization code for your application here\
	 *-----------------------------------------------------*/\
\
\
	/*----------------------------------------------------------------\
	 * Create and popup the first window of the interface.  The 	 \
	 * return value can be used in the popdown or destroy functions.\
	 * The swidget return value of  PJ_INTERFACE_FUNCTION_CALL will\
	 * be assigned to "mainIface" from  PJ_INTERFACE_RETVAL_TYPE. \
	 *---------------------------------------------------------------*/\
\
	$PJ_INTERFACE_FUNCTION_CALL\
	$PJ_POPUP_CALL\
\
	/*-------------------------\
	 * Enter the event loop \
	 *------------------------*/\
	THR_Init();\
	load_sopclassList();\
  	$PJ_EVENT_LOOP\
	THR_Shutdown();\
\
}\

*uxmain.PjExplicitEventLoop: {\
\
	XEvent event;\
\
	for (;;)\
	{\
	    UxNextEvent(&event);\
\
	    switch (event.type)\
	    {\
\
	       /*----------------------------------------------------\
	  	* Insert code here to handle any events that you do\
	 	* not wish to be handled by the interface.\
	 	*----------------------------------------------------*/\
\
		default:\
	    	    UxDispatchEvent(&event);\
	    	    break;\
	    }\
	}\
}
*uxmain.PjEdited: 1
*uxmain.PjHasImplicitLoop: 1
*uxmain.PjHasExplicitLoop: 0

*xtmain.class: PJxtmain
*xtmain.PjName: xtmain
*xtmain.PjParent: assoc_tool
*xtmain.PjFileName: assoc_tool.c
*xtmain.PjDate: 818695876
*xtmain.PjMode: 1
*xtmain.PjBody: /*-----------------------------------------------------------\
 * This is the project main program file for Xt generated \
 * code. You may add application dependent source code \
 * at the appropriate places. \
 * 			     \
 * Do not modify the statements preceded by the dollar\
 * sign ($), these statements will be replaced with\
 * the appropriate source code when the main program is  \
 * generated.  \
 *\
 * $Date: 1998-08-03 16:07:37 $  		$Revision: 1.6 $ \
 *-----------------------------------------------------------*/ \
\
#include <X11/Intrinsic.h>\
#include <X11/StringDefs.h>\
#include <X11/Xlib.h>\
\
#include <Xm/Xm.h>\
\
#include "prototypes.h"\
\
/*---------------------------------------------------- \
 * UxXt.h needs to be included only when compiling a \
 * stand-alone application. \
 *---------------------------------------------------*/\
#ifndef DESIGN_TIME\
#include "UxXt.h"\
#endif /* DESIGN_TIME */\
\
XtAppContext	UxAppContext;\
Widget		UxTopLevel;\
Display		*UxDisplay;\
int		UxScreen;\
\
/*----------------------------------------------\
 * Insert application global declarations here\
 *---------------------------------------------*/\
\
\
#ifdef _NO_PROTO\
main(argc,argv)\
        int     argc;\
        char    *argv[];\
#else\
main( int argc, char *argv[])\
#endif /* _NO_PROTO */\
{\
	/*-----------------------------------------------------------\
	 * Declarations.\
         * The default identifier - mainIface will only be declared \
	 * if the interface function is global and of type swidget.\
	 * To change the identifier to a different name, modify the\
	 * string mainIface in the file "xtmain.dat". If "mainIface"\
         * is declared, it will be used below where the return value\
	 * of  PJ_INTERFACE_FUNCTION_CALL will be assigned to it.\
         *----------------------------------------------------------*/ \
\
  	$PJ_INTERFACE_RETVAL_TYPE\
\
	/*---------------------------------\
	 * Interface function declaration\
	 *--------------------------------*/	\
\
 	$PJ_INTERFACE_FUNCTION_DECL\
	$PJ_INTERFACE_FUNCTION_ARG_DECL\
\
	/*---------------------\
	 * Initialize program\
	 *--------------------*/\
\
#ifdef XOPEN_CATALOG\
	if (XSupportsLocale()) {\
		XtSetLanguageProc(NULL,(XtLanguageProc)NULL,NULL);\
	}\
#endif\
\
	SgePreInitialize(&argc, argv);\
  	UxTopLevel = XtAppInitialize(&UxAppContext, "$PJ_APP_CLASS_NAME",\
				     NULL, 0, &argc, argv, NULL, NULL, 0);\
\
	UxDisplay = XtDisplay(UxTopLevel);\
	UxScreen = XDefaultScreen(UxDisplay);\
\
	/* We set the geometry of UxTopLevel so that dialogShells\
	   that are parented on it will get centered on the screen\
	   (if defaultPosition is true). */\
\
	XtVaSetValues(UxTopLevel,\
			XtNx, 0,\
			XtNy, 0,\
			XtNwidth, DisplayWidth(UxDisplay, UxScreen),\
			XtNheight, DisplayHeight(UxDisplay, UxScreen),\
			NULL);\
\
	/*-------------------------------------------------------\
	 * Insert initialization code for your application here \
	 *------------------------------------------------------*/\
	\
\
	/*----------------------------------------------------------------\
	 * Create and popup the first window of the interface.  The 	 \
	 * return value can be used in the popdown or destroy functions.\
         * The Widget return value of  PJ_INTERFACE_FUNCTION_CALL will \
         * be assigned to "mainIface" from  PJ_INTERFACE_RETVAL_TYPE. \
	 *---------------------------------------------------------------*/\
\
	$PJ_INTERFACE_FUNCTION_CALL\
	$PJ_POPUP_CALL\
\
	/*-----------------------\
	 * Enter the event loop \
	 *----------------------*/\
	load_sopclassList();\
  	$PJ_EVENT_LOOP\
	return 0;\
}\

*xtmain.PjExplicitEventLoop: {\
\
	XEvent event;\
\
	for (;;)\
	{\
	    XtAppNextEvent(UxAppContext, &event);\
\
	    switch (event.type)\
	    {\
\
	       /*---------------------------------------------------\
	 	* Insert code here to handle any events that you do\
		* not wish to be handled by the interface.\
		*---------------------------------------------------*/\
\
		default:\
	    	    XtDispatchEvent(&event);\
	    	    break;\
	    }\
	}\
}
*xtmain.PjEdited: 1
*xtmain.PjHasImplicitLoop: 1
*xtmain.PjHasExplicitLoop: 0

*uilmain.class: PJuilmain
*uilmain.PjName: uilmain
*uilmain.PjParent: assoc_tool
*uilmain.PjFileName: assoc_tool.c
*uilmain.PjDate: 0
*uilmain.PjMode: -1

*uxmake.class: PJuxmake
*uxmake.PjName: uxmake
*uxmake.PjParent: assoc_tool
*uxmake.PjFileName: assoc_tool.mk
*uxmake.PjDate: 0
*uxmake.PjMode: -1

*xtmake.class: PJxtmake
*xtmake.PjName: xtmake
*xtmake.PjParent: assoc_tool
*xtmake.PjFileName: assoc_tool.mk
*xtmake.PjDate: 818695876
*xtmake.PjMode: 1

*uilmake.class: PJuilmake
*uilmake.PjName: uilmake
*uilmake.PjParent: assoc_tool
*uilmake.PjFileName: assoc_tool.mk
*uilmake.PjDate: 0
*uilmake.PjMode: -1
